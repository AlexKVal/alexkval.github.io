<?xml version="1.0" encoding="utf-8"?>


<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title type="text">AlexKVal</title>
    <subtitle type="html">Alexander Shemetovskiy</subtitle>
    <updated>2023-06-30T11:34:38&#43;01:00</updated>
    <id>https://alexkval.github.io/</id>
    <link rel="alternate" type="text/html" href="https://alexkval.github.io/" />
    <link rel="self" type="application/atom&#43;xml" href="https://alexkval.github.io/atom.xml" />
    <author>
            <name>Alexander Shemetovskiy</name>
            <uri>https://alexkval.github.io/</uri>
            
                <email>alexkval@gmail.com</email>
            </author>
    <rights>Copyright © Alexander Shemetovskiy</rights>
    <generator uri="https://gohugo.io/" version="0.111.3">Hugo</generator>
        <entry>
            <title type="text">Prefer simple methods</title>
            <link rel="alternate" type="text/html" href="https://alexkval.github.io/posts/prefer-short-methods/" />
            <id>https://alexkval.github.io/posts/prefer-short-methods/</id>
            <updated>2023-02-18T00:00:00&#43;00:00</updated>
            <published>2023-02-18T00:00:00&#43;00:00</published>
            <author>
                    <name>Alexander Shemetovskiy</name>
                    <uri>https://alexkval.github.io/</uri>
                    <email>alexkval@gmail.com</email>
                    </author>
            <rights>Copyright © Alexander Shemetovskiy</rights><summary type="html">&lt;p&gt;&lt;a href=&#34;https://alexkval.github.io/posts/prefer-short-methods&#34;&gt;&lt;img src=&#34;https://alexkval.github.io/posts/prefer-short-methods/code.jpg&#34; alt=&#34;screenshot&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Long methods vs simple ones. What&amp;rsquo;s the problem?&lt;/p&gt;
&lt;p&gt;Long methods&amp;rsquo; issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;usually does too much and &amp;ldquo;knows&amp;rdquo; too much&lt;/li&gt;
&lt;li&gt;as a consequence, it breaks the Single Responsibility Principle&lt;/li&gt;
&lt;li&gt;it is harder to grasp what it does when you read it&lt;/li&gt;
&lt;li&gt;more changes needed to add or amend functionality&lt;/li&gt;
&lt;li&gt;you have to write pretty complex tests&lt;/li&gt;
&lt;li&gt;and you need a lot of them to cover all of the possible permutations&lt;/li&gt;
&lt;/ul&gt;</summary>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/categories/ruby/" term="Ruby" label="Ruby" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/categories/ruby-on-rails/" term="Ruby on Rails" label="Ruby on Rails" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/categories/refactoring/" term="Refactoring" label="Refactoring" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/ruby/" term="ruby" label="ruby" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/rubyonrails/" term="rubyonrails" label="rubyonrails" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/refactoring/" term="refactoring" label="refactoring" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Exception vs StandardError</title>
            <link rel="alternate" type="text/html" href="https://alexkval.github.io/posts/exception-vs-standard-error/" />
            <id>https://alexkval.github.io/posts/exception-vs-standard-error/</id>
            <updated>2023-01-26T00:00:00&#43;00:00</updated>
            <published>2023-01-26T00:00:00&#43;00:00</published>
            <author>
                    <name>Alexander Shemetovskiy</name>
                    <uri>https://alexkval.github.io/</uri>
                    <email>alexkval@gmail.com</email>
                    </author>
            <rights>Copyright © Alexander Shemetovskiy</rights><summary type="html">&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rb&#34; data-lang=&#34;rb&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# RuntimeError &amp;lt; StandardError &amp;lt; Exception &amp;lt; Object&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;begin&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;does/not/exist&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;rescue&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Exception&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; e
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;it is an Exception&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# =&amp;gt; &amp;#34;it is an Exception&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;begin&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;does/not/exist&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;rescue&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;StandardError&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; e
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;it is an Exception&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# =&amp;gt; LoadError: cannot load such file -- does/not/exist&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;What is the difference in results between this&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rb&#34; data-lang=&#34;rb&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;raise&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Oups&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rescue&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hi&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and this?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rb&#34; data-lang=&#34;rb&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;does/not/exist&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rescue&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hi&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And why the results are different. Let&amp;rsquo;s figure it out step by step.&lt;/p&gt;</summary>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/categories/ruby/" term="Ruby" label="Ruby" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/categories/ruby-on-rails/" term="Ruby on Rails" label="Ruby on Rails" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/ruby/" term="ruby" label="ruby" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/rubyonrails/" term="rubyonrails" label="rubyonrails" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/development/" term="development" label="development" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Let’s implement ‘Stack’ in Python</title>
            <link rel="alternate" type="text/html" href="https://alexkval.github.io/posts/stack-in-python/" />
            <id>https://alexkval.github.io/posts/stack-in-python/</id>
            <updated>2020-07-11T00:03:14&#43;01:00</updated>
            <published>2020-07-10T22:16:18&#43;01:00</published>
            <author>
                    <name>Alexander Shemetovskiy</name>
                    <uri>https://alexkval.github.io/</uri>
                    <email>alexkval@gmail.com</email>
                    </author>
            <rights>Copyright © Alexander Shemetovskiy</rights><summary type="html">&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stack()     &lt;span style=&#34;color:#75715e&#34;&gt;# []&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;push(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;one&amp;#39;&lt;/span&gt;)   &lt;span style=&#34;color:#75715e&#34;&gt;# [&amp;#39;one&amp;#39;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;push(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;two&amp;#39;&lt;/span&gt;)   &lt;span style=&#34;color:#75715e&#34;&gt;# [&amp;#39;one&amp;#39;, &amp;#39;two&amp;#39;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;top()         &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#39;two&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;push(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;three&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# [&amp;#39;one&amp;#39;, &amp;#39;two&amp;#39;, &amp;#39;three&amp;#39;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;top()         &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#39;three&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;size()        &lt;span style=&#34;color:#75715e&#34;&gt;# 3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pop()         &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#39;three&amp;#39;  [&amp;#39;one&amp;#39;, &amp;#39;two&amp;#39;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pop()         &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#39;two&amp;#39;    [&amp;#39;one&amp;#39;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is the API I want to have for the &amp;lsquo;Stack&amp;rsquo; data structure.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s implement it in &lt;code&gt;Python&lt;/code&gt; step by step.&lt;/p&gt;</summary>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/categories/data-structures/" term="Data structures" label="Data structures" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/categories/tutorial/" term="Tutorial" label="Tutorial" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/python/" term="python" label="python" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">JavaScript-like HashMaps in Ruby</title>
            <link rel="alternate" type="text/html" href="https://alexkval.github.io/posts/js-like-hashmap-in-ruby/" />
            <id>https://alexkval.github.io/posts/js-like-hashmap-in-ruby/</id>
            <updated>2020-07-06T19:05:22&#43;01:00</updated>
            <published>2020-07-06T14:36:17&#43;01:00</published>
            <author>
                    <name>Alexander Shemetovskiy</name>
                    <uri>https://alexkval.github.io/</uri>
                    <email>alexkval@gmail.com</email>
                    </author>
            <rights>Copyright © Alexander Shemetovskiy</rights><summary type="html">&lt;p&gt;&lt;img src=&#34;https://alexkval.github.io/posts/js-like-hashmap-in-ruby/intro.jpg&#34; alt=&#34;screenshot&#34; title=&#34;Photo by Joshua Aragon on Unsplash&#34;&gt;&lt;/p&gt;
&lt;p&gt;In the previous &lt;a href=&#34;https://alexkval.github.io/posts/js-like-object-in-rails/&#34;&gt;JavaScript like object in Ruby on Rails&lt;/a&gt; article,
I&amp;rsquo;ve described how similar behavior can be achieved in Rails code.&lt;/p&gt;
&lt;p&gt;But in pure Ruby there still is no short way for this.&lt;/p&gt;
&lt;p&gt;It turns out that a proposal to Ruby core has been made to add this nice-to-have feature.&lt;/p&gt;</summary>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/categories/ruby/" term="Ruby" label="Ruby" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/ruby/" term="ruby" label="ruby" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/development/" term="development" label="development" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">What is ‘unlogged’ in PostgreSQL for</title>
            <link rel="alternate" type="text/html" href="https://alexkval.github.io/posts/what-is-unlogged-in-postgresql-for/" />
            <id>https://alexkval.github.io/posts/what-is-unlogged-in-postgresql-for/</id>
            <updated>2020-06-08T15:23:06&#43;01:00</updated>
            <published>2020-06-08T14:29:50&#43;01:00</published>
            <author>
                    <name>Alexander Shemetovskiy</name>
                    <uri>https://alexkval.github.io/</uri>
                    <email>alexkval@gmail.com</email>
                    </author>
            <rights>Copyright © Alexander Shemetovskiy</rights><summary type="html">&lt;p&gt;&lt;img src=&#34;https://alexkval.github.io/posts/what-is-unlogged-in-postgresql-for/intro.jpg&#34; alt=&#34;screenshot&#34; title=&#34;Photo: by flickrfavorites on flickr&#34;&gt;&lt;/p&gt;
&lt;p&gt;Today I&amp;rsquo;ve learned about one of the useful PostgreSQL features - &amp;lsquo;unlogged&amp;rsquo; tables.&lt;/p&gt;
&lt;p&gt;What does this feature exist for?&lt;/p&gt;
&lt;p&gt;Say you need to cache some transient data and you don&amp;rsquo;t really care about it being persisted after a server crash,
enter &lt;a href=&#34;https://www.postgresql.org/docs/11/sql-createtable.html#SQL-CREATETABLE-UNLOGGED&#34;&gt;&amp;lsquo;unlogged&amp;rsquo;&lt;/a&gt; tables.&lt;/p&gt;</summary>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/categories/postgresql/" term="PostgreSQL" label="PostgreSQL" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/categories/sql/" term="SQL" label="SQL" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/postgresql/" term="postgresql" label="postgresql" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/development/" term="development" label="development" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">JavaScript like object in Ruby on Rails</title>
            <link rel="alternate" type="text/html" href="https://alexkval.github.io/posts/js-like-object-in-rails/" />
            <id>https://alexkval.github.io/posts/js-like-object-in-rails/</id>
            <updated>2020-05-29T13:59:52&#43;01:00</updated>
            <published>2020-05-28T13:19:39&#43;01:00</published>
            <author>
                    <name>Alexander Shemetovskiy</name>
                    <uri>https://alexkval.github.io/</uri>
                    <email>alexkval@gmail.com</email>
                    </author>
            <rights>Copyright © Alexander Shemetovskiy</rights><summary type="html">&lt;p&gt;&lt;img src=&#34;https://alexkval.github.io/posts/js-like-object-in-rails/intro.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt;
&lt;p&gt;One day, when I was explaining how the &lt;code&gt;routing &amp;gt; params &amp;gt; controllers &amp;gt; views&lt;/code&gt; work,
I wanted to keep things as simple as possible,
so I needed a way to flexibly &amp;ldquo;mock&amp;rdquo; AR objects.&lt;/p&gt;
&lt;p&gt;And the JavaScript-like objects would be a good-enough solution for it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;obj&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;obj&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;some_field&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// undefined - N.B. no error raised
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;obj&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;some_field&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;some value&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;obj&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;some_field&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// &amp;#34;some value&amp;#34; - JS &amp;#34;magic&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In contrast, the Ruby&amp;rsquo;s Object does not allow it.&lt;/p&gt;</summary>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/categories/ruby-on-rails/" term="Ruby on Rails" label="Ruby on Rails" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/categories/useful-tricks/" term="Useful Tricks" label="Useful Tricks" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/rubyonrails/" term="rubyonrails" label="rubyonrails" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/development/" term="development" label="development" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Show me SQL generated by rake tasks</title>
            <link rel="alternate" type="text/html" href="https://alexkval.github.io/posts/show-me-sql-generated-by-rake-tasks/" />
            <id>https://alexkval.github.io/posts/show-me-sql-generated-by-rake-tasks/</id>
            <updated>2020-05-29T13:59:34&#43;01:00</updated>
            <published>2020-05-26T17:00:54&#43;01:00</published>
            <author>
                    <name>Alexander Shemetovskiy</name>
                    <uri>https://alexkval.github.io/</uri>
                    <email>alexkval@gmail.com</email>
                    </author>
            <rights>Copyright © Alexander Shemetovskiy</rights><summary type="html">&lt;p&gt;&lt;img src=&#34;https://alexkval.github.io/posts/show-me-sql-generated-by-rake-tasks/intro.png&#34; alt=&#34;screenshot&#34; title=&#34;Colorful verbose output of the &#39;rails db:migrate&#39;&#34;&gt;&lt;/p&gt;
&lt;p&gt;I was explaining what the &lt;code&gt;rails db:migrate&lt;/code&gt; command does under the hood
and I wanted to demonstrate what SQL queries the Rails generates.&lt;/p&gt;
&lt;p&gt;And it would be nice for them to be colorful of course 😃&lt;/p&gt;</summary>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/categories/ruby-on-rails/" term="Ruby on Rails" label="Ruby on Rails" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/categories/useful-tricks/" term="Useful Tricks" label="Useful Tricks" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/rubyonrails/" term="rubyonrails" label="rubyonrails" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/development/" term="development" label="development" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Unleash your AI to rule the StarCraft2 (on macOS)</title>
            <link rel="alternate" type="text/html" href="https://alexkval.github.io/posts/unleash-your-ai-to-rule-the-sc2-on-macos/" />
            <id>https://alexkval.github.io/posts/unleash-your-ai-to-rule-the-sc2-on-macos/</id>
            <updated>2019-04-14T00:00:00&#43;00:00</updated>
            <published>2019-04-14T00:00:00&#43;00:00</published>
            <author>
                    <name>Alexander Shemetovskiy</name>
                    <uri>https://alexkval.github.io/</uri>
                    <email>alexkval@gmail.com</email>
                    </author>
            <rights>Copyright © Alexander Shemetovskiy</rights><summary type="html">&lt;p&gt;&lt;img src=&#34;https://alexkval.github.io/posts/unleash-your-ai-to-rule-the-sc2-on-macos/intro-sc2.png&#34; alt=&#34;screenshot&#34; title=&#34;AI is learning how to play SC2&#34;&gt;&lt;/p&gt;
&lt;p&gt;This a bit of pretentious title is about the setup of the great &lt;a href=&#34;https://github.com/deepmind/pysc2&#34;&gt;PySC2&lt;/a&gt; library
which makes it possible to “rule” the &lt;strong&gt;StarCraft II&lt;/strong&gt; with your own &lt;strong&gt;AI&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;“Scientifically” speaking, the PySC2 allows for Reinforcement Learning agents
to interact with the &lt;code&gt;StarCraft II&lt;/code&gt; game.
The library does it by exposing the &lt;code&gt;StarCraft II Machine Learning API&lt;/code&gt; as a Python RL Environment.&lt;/p&gt;</summary>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/categories/ai/" term="AI" label="AI" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/categories/machine-learning/" term="Machine learning" label="Machine learning" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/ai/" term="ai" label="ai" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/machine-learning/" term="machine-learning" label="machine-learning" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/setup/" term="setup" label="setup" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/tensor-flow/" term="tensor-flow" label="tensor-flow" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/python/" term="python" label="python" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Dissecting of the ‘rails new’ command</title>
            <link rel="alternate" type="text/html" href="https://alexkval.github.io/posts/dissecting-rails-new/" />
            <id>https://alexkval.github.io/posts/dissecting-rails-new/</id>
            <updated>2016-12-11T00:00:00&#43;00:00</updated>
            <published>2016-12-11T00:00:00&#43;00:00</published>
            <author>
                    <name>Alexander Shemetovskiy</name>
                    <uri>https://alexkval.github.io/</uri>
                    <email>alexkval@gmail.com</email>
                    </author>
            <rights>Copyright © Alexander Shemetovskiy</rights><summary type="html">&lt;p&gt;&lt;img src=&#34;https://alexkval.github.io/posts/dissecting-rails-new/rails-new-h.png&#34; alt=&#34;screenshot&#34; title=&#34;What &#39;rails new&#39; does&#34;&gt;&lt;/p&gt;
&lt;p&gt;If we run &lt;code&gt;rails new -h&lt;/code&gt; we see that we can disable generating of some parts of a new rails project.&lt;/p&gt;
&lt;p&gt;In this article I am going to dissect these particular options:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;-S, [--skip-sprockets]     # Skip Sprockets files
-J, [--skip-javascript]    # Skip JavaScript files
    [--skip-turbolinks]    # Skip turbolinks gem
-O, [--skip-active-record] # Skip Active Record files
&lt;/code&gt;&lt;/pre&gt;</summary>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/categories/ruby-on-rails/" term="Ruby on Rails" label="Ruby on Rails" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/categories/useful-tricks/" term="Useful Tricks" label="Useful Tricks" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/rubyonrails/" term="rubyonrails" label="rubyonrails" />
                            
                        
                            
                            
                            
                                <category scheme="https://alexkval.github.io/tags/development/" term="development" label="development" />
                            
                        
                    
                
            
        </entry>
    
</feed>
